/*
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */



// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns (applied as 10px of left/right padding on each column).
$zen-column-count:  1;
$zen-gutter-width:  20px;

// If you need IE6/7 support for box-sizing: border-box (default), see _init.scss
//$zen-box-sizing: content-box;

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;

/* -----------------------------------------------------------------------------
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
#page,
.region-bottom {
  // margin-left: auto;
  // margin-right: auto;
  // max-width: 1200px;
}

@mixin page-max-width {
  margin-left: auto;
  margin-right: auto;
  max-width: $page-max-width;
  padding-left: $zen-gutter-width;
  padding-right: $zen-gutter-width;
  box-sizing: border-box;
}


main {
  padding-top: $main-padding-top;
  padding-bottom: $main-padding-bottom;
}

header[role="banner"],
#navigation,
#main,
footer[role="contentinfo"],
.region-bottom {
    & > .content {
      @include page-max-width;
    }
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
header[role="banner"],
#navigation,
// #content,
// .region-sidebar-first,
// .region-sidebar-second,
footer[role="contentinfo"] {
  // See the note about $zen-auto-include-item-base above.
  // @include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
header[role="banner"],
#main,
footer[role="contentinfo"] {
  // @include zen-grid-container();
}




/* -----------------------------------------------------------------------------
 *                                                              Overrides
 */
#page {
  height: 100%;
  display: table; /* gives the contained main full-height, pushing the contained footer to the bottom */
  width: 100%;
  box-sizing: border-box;
}

#main {
  height: 100%;
  box-sizing: border-box;
}

.page_width_narrow #main > .content {
  max-width: 600px;

  textarea,
  select,
  input[type="date"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="email"],
  input[type="month"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="text"],
  input[type="time"],
  input[type="url"],
  input[type="week"] {
    width: 100%;
  }
}
.page_width_regular #main > .content {
  max-width: 1000px;
}



/* -----------------------------------------------------------------------------
 *                                                              Sticky footer
 */
$footer-height: 50px;
* {
  margin: 0;
}
html, body {
  height: 100%;
}
#page-container {
  min-height: 100%;
  /* equal to footer height */
  margin-bottom: -$footer-height;
}
#page-container:after {
  content: "";
  display: block;
}
footer[role="contentinfo"],
#page-container:after {
  height: $footer-height;
}
footer[role="contentinfo"] {
  background: orange;
}



/* -----------------------------------------------------------------------------
 *                                                              Smaller screens.
 */
$zen-column-count: 3; // Use 3 grid columns

// @include zen-new-row();

@media all and (min-width: $w-narrow) and (max-width: $w-regular) {}

/* -----------------------------------------------------------------------------
 *                                                              Large screens.
 */
$zen-column-count: 4; // Use 4 grid columns

@media all and (min-width: $w-regular) {}
